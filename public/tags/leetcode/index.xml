<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on 동주의 세상</title>
    <link>https://jutopia.net/tags/leetcode/</link>
    <description>Recent content in leetcode on 동주의 세상</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Wed, 03 Aug 2022 10:43:23 +0900</lastBuildDate><atom:link href="https://jutopia.net/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 1011, Capacity To Ship Packages Within D Days 파이썬 풀이 해설</title>
      <link>https://jutopia.net/algorithm/lc1011/</link>
      <pubDate>Wed, 03 Aug 2022 10:43:23 +0900</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc1011/</guid>
      <description>LeetCode 1146, Snapshot Array
접근  binary-search 로 적절한 배의 weight 용량을 찾는다. 처음 lo, hi 는 max(weights), sum(weight) 이다.</description>
    </item>
    
    <item>
      <title>LeetCode 1146, Snapshot Array 파이썬, 풀이, 해설</title>
      <link>https://jutopia.net/algorithm/lc1146/</link>
      <pubDate>Fri, 29 Jul 2022 14:53:14 +0900</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc1146/</guid>
      <description>LeetCode 1146, Snapshot Array
접근  length 로 2차원 배열(arr)을 초기화한다. snap_id 를 기억하는 변수를 지정한다.</description>
    </item>
    
    <item>
      <title>LeetCode 981, Time Based Key-Value Store 파이썬, 풀이, 해설</title>
      <link>https://jutopia.net/algorithm/lc981/</link>
      <pubDate>Thu, 28 Jul 2022 09:35:29 +0900</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc981/</guid>
      <description>접근  dictionary 에 키에 해당하는 리스트를 만들고 오름차순의 input 을 받는다. get 부를때 해당 키의 리스트에서 binary search 로 최댓값을 찾는다.</description>
    </item>
    
    <item>
      <title>LeetCode 1870, Minimum Speed to Arrive on Time 파이썬, 해설, 풀이</title>
      <link>https://jutopia.net/algorithm/lc1870/</link>
      <pubDate>Wed, 27 Jul 2022 11:04:15 +0900</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc1870/</guid>
      <description>접근  가능한 속도 1 과 10^7 사이에서 binary search 로 최소 속도를 찾는다. 각 속도마다 train list 를 돌며 걸리는 시간을 계산에서 binary search range 를 조정한다.</description>
    </item>
    
    <item>
      <title>LeetCode 302. Range Sum Query 2D - Immutable 파이썬, 해설, 풀이</title>
      <link>https://jutopia.net/algorithm/lc304/</link>
      <pubDate>Fri, 29 Oct 2021 21:46:22 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc304/</guid>
      <description>사고 같은 크기의 matrix 에 0, 0 부터 현재 index 까지 만들어지는 사각형 sum 을 저장하는 방식이 쉬우면서도 효율적인 접근이다.</description>
    </item>
    
    <item>
      <title>LeetCode 96. Unique Binary Search Trees 파이썬, 해설, 풀이</title>
      <link>https://jutopia.net/algorithm/lc96/</link>
      <pubDate>Sun, 24 Oct 2021 21:46:22 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc96/</guid>
      <description>접근  전체 node 가 head를 제외하고 n개일 때 head 에서 왼쪽에 k, 오른쪽에 n-k 만큼의 node를 갖는 경우의 수는 dp[k] * dp[n - k] 이다.</description>
    </item>
    
    <item>
      <title>LeetCode 139. Work Break 파이썬, 풀이, 해설</title>
      <link>https://jutopia.net/algorithm/lc139/</link>
      <pubDate>Fri, 22 Oct 2021 12:59:56 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc139/</guid>
      <description>접근  dp 는 s의 현재 index를 단어의 끝으로 가장 길게 완성할 수 있는 시작 index를 가리킨다.</description>
    </item>
    
    <item>
      <title>LeetCode 1567. Maximum Length of Subarray with Positive Product 해설, 풀이, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc1567/</link>
      <pubDate>Fri, 15 Oct 2021 18:28:22 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc1567/</guid>
      <description>접근  linear 로 훝으며 모든 값을 곱하며 진행한다. 메모리 절약을 위해 부호만 기록한다. 각 index 에서 여태의 곱연산 부호에 따라 조건부로 최대 부분 수열 길이를 갱신한다.</description>
    </item>
    
    <item>
      <title>LeetCode 45. Jump Game II 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc45/</link>
      <pubDate>Thu, 14 Oct 2021 17:03:10 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc45/</guid>
      <description>접근  현재 pointer 와 닿을 수 있는 최대 거리인 reach, 점프 횟수 카운트, 새로운 reach 후보 변수인 temp 네 가지 변수를 이용한다.</description>
    </item>
    
    <item>
      <title>LeetCode 55. Jump Game 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc55/</link>
      <pubDate>Wed, 13 Oct 2021 20:18:42 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc55/</guid>
      <description>접근  현재 pointer 와 닿을 수 있는 최대 거리인 reach 두 변수를 이용한다. 닿는 index 중 가장 멀리까지 갈 수 있는 reach 로 계속해서 업데이트 한다.</description>
    </item>
    
    <item>
      <title>LeetCode 213. House Robber II 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc213/</link>
      <pubDate>Tue, 12 Oct 2021 18:52:54 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc213/</guid>
      <description>접근  처음과 마지막이 접하기 때문에 House Robber I 과 다른 방식을 생각해야한다. 첫번째 집을 털면 마지막 집은 고려할 필요가 없다.</description>
    </item>
    
    <item>
      <title>LeetCode 33 - Search in rotated sorted array 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc33/</link>
      <pubDate>Wed, 23 Jun 2021 14:22:28 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc33/</guid>
      <description>접근  기본적인 배경은 이분 탐색이다. 현재 pivot 기준으로 왼쪽을 봐야할지, 오른쪽을 봐야할지 조건을 생각하는 것이 관건이다.</description>
    </item>
    
  </channel>
</rss>
