<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dp on 동주의 세상</title>
    <link>https://jutopia.net/tags/dp/</link>
    <description>Recent content in dp on 동주의 세상</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Fri, 29 Oct 2021 21:46:22 -0700</lastBuildDate><atom:link href="https://jutopia.net/tags/dp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 302. Range Sum Query 2D - Immutable 파이썬, 해설, 풀이</title>
      <link>https://jutopia.net/algorithm/lc304/</link>
      <pubDate>Fri, 29 Oct 2021 21:46:22 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc304/</guid>
      <description>사고 같은 크기의 matrix 에 0, 0 부터 현재 index 까지 만들어지는 사각형 sum 을 저장하는 방식이 쉬우면서도 효율적인 접근이다.</description>
    </item>
    
    <item>
      <title>LeetCode 96. Unique Binary Search Trees 파이썬, 해설, 풀이</title>
      <link>https://jutopia.net/algorithm/lc96/</link>
      <pubDate>Sun, 24 Oct 2021 21:46:22 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc96/</guid>
      <description>접근  전체 node 가 head를 제외하고 n개일 때 head 에서 왼쪽에 k, 오른쪽에 n-k 만큼의 node를 갖는 경우의 수는 dp[k] * dp[n - k] 이다.</description>
    </item>
    
    <item>
      <title>LeetCode 139. Work Break 파이썬, 풀이, 해설</title>
      <link>https://jutopia.net/algorithm/lc139/</link>
      <pubDate>Fri, 22 Oct 2021 12:59:56 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc139/</guid>
      <description>접근  dp 는 s의 현재 index를 단어의 끝으로 가장 길게 완성할 수 있는 시작 index를 가리킨다.</description>
    </item>
    
    <item>
      <title>LeetCode 1567. Maximum Length of Subarray with Positive Product 해설, 풀이, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc1567/</link>
      <pubDate>Fri, 15 Oct 2021 18:28:22 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc1567/</guid>
      <description>접근  linear 로 훝으며 모든 값을 곱하며 진행한다. 메모리 절약을 위해 부호만 기록한다. 각 index 에서 여태의 곱연산 부호에 따라 조건부로 최대 부분 수열 길이를 갱신한다.</description>
    </item>
    
    <item>
      <title>LeetCode 45. Jump Game II 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc45/</link>
      <pubDate>Thu, 14 Oct 2021 17:03:10 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc45/</guid>
      <description>접근  현재 pointer 와 닿을 수 있는 최대 거리인 reach, 점프 횟수 카운트, 새로운 reach 후보 변수인 temp 네 가지 변수를 이용한다.</description>
    </item>
    
    <item>
      <title>LeetCode 55. Jump Game 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc55/</link>
      <pubDate>Wed, 13 Oct 2021 20:18:42 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc55/</guid>
      <description>접근  현재 pointer 와 닿을 수 있는 최대 거리인 reach 두 변수를 이용한다. 닿는 index 중 가장 멀리까지 갈 수 있는 reach 로 계속해서 업데이트 한다.</description>
    </item>
    
    <item>
      <title>LeetCode 213. House Robber II 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc213/</link>
      <pubDate>Tue, 12 Oct 2021 18:52:54 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc213/</guid>
      <description>접근  처음과 마지막이 접하기 때문에 House Robber I 과 다른 방식을 생각해야한다. 첫번째 집을 털면 마지막 집은 고려할 필요가 없다.</description>
    </item>
    
    <item>
      <title>백준 10942 팰린드롬? - 파이썬</title>
      <link>https://jutopia.net/algorithm/boj10942/</link>
      <pubDate>Sat, 26 Jun 2021 15:46:18 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/boj10942/</guid>
      <description>접근  s 와 e 를 받아서 2차원 배열로 각각의 질문에 O(1) 에 답하는 것이 목표이다.</description>
    </item>
    
    <item>
      <title>백준 2616 소형기관차 - 파이썬</title>
      <link>https://jutopia.net/algorithm/boj2616/</link>
      <pubDate>Wed, 16 Jun 2021 17:16:53 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/boj2616/</guid>
      <description>접근  열 길이가 기차의 수 + 1이고, 행 길이가 3인 dp 행렬로 접근한다. 1~3번째 행은 각각 현재 인덱스에서 1~3번째 열차가 골라졌다면 실을 수 있는 최대 손님의 수다.</description>
    </item>
    
    <item>
      <title>백준 1958 LCS3 파이썬</title>
      <link>https://jutopia.net/algorithm/boj1958/</link>
      <pubDate>Thu, 10 Jun 2021 13:02:36 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/boj1958/</guid>
      <description>접근 처음 두 줄의 LCS 를 찾고, 그 결과와 마지막 줄의 LCS 를 찾는 순차적인 방법으로도 가능하다.</description>
    </item>
    
    <item>
      <title>백준 1005 해설 파이썬</title>
      <link>https://jutopia.net/algorithm/boj1105/</link>
      <pubDate>Tue, 08 Jun 2021 19:59:19 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/boj1105/</guid>
      <description>solved.ac class 5의 essential 문제로, 위상 정렬에 대한 이해가 있다면 어렵지 않게 풀수 있다.
위상 정렬에 대해서는 따로 알고리즘 포스팅에 정리해놓겠다.</description>
    </item>
    
  </channel>
</rss>
