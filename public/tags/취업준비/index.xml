<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>취업준비 on 동주의 세상</title>
    <link>https://jutopia.net/tags/%EC%B7%A8%EC%97%85%EC%A4%80%EB%B9%84/</link>
    <description>Recent content in 취업준비 on 동주의 세상</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Fri, 22 Oct 2021 12:59:56 -0700</lastBuildDate><atom:link href="https://jutopia.net/tags/%EC%B7%A8%EC%97%85%EC%A4%80%EB%B9%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 139. Work Break 파이썬, 풀이, 해설</title>
      <link>https://jutopia.net/algorithm/lc139/</link>
      <pubDate>Fri, 22 Oct 2021 12:59:56 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc139/</guid>
      <description>접근  dp 는 s의 현재 index를 단어의 끝으로 가장 길게 완성할 수 있는 시작 index를 가리킨다.</description>
    </item>
    
    <item>
      <title>LeetCode 1567. Maximum Length of Subarray with Positive Product 해설, 풀이, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc1567/</link>
      <pubDate>Fri, 15 Oct 2021 18:28:22 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc1567/</guid>
      <description>접근  linear 로 훝으며 모든 값을 곱하며 진행한다. 메모리 절약을 위해 부호만 기록한다. 각 index 에서 여태의 곱연산 부호에 따라 조건부로 최대 부분 수열 길이를 갱신한다.</description>
    </item>
    
    <item>
      <title>LeetCode 45. Jump Game II 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc45/</link>
      <pubDate>Thu, 14 Oct 2021 17:03:10 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc45/</guid>
      <description>접근  현재 pointer 와 닿을 수 있는 최대 거리인 reach, 점프 횟수 카운트, 새로운 reach 후보 변수인 temp 네 가지 변수를 이용한다.</description>
    </item>
    
    <item>
      <title>LeetCode 55. Jump Game 풀이, 해설, 파이썬</title>
      <link>https://jutopia.net/algorithm/lc55/</link>
      <pubDate>Wed, 13 Oct 2021 20:18:42 -0700</pubDate>
      
      <guid>https://jutopia.net/algorithm/lc55/</guid>
      <description>접근  현재 pointer 와 닿을 수 있는 최대 거리인 reach 두 변수를 이용한다. 닿는 index 중 가장 멀리까지 갈 수 있는 reach 로 계속해서 업데이트 한다.</description>
    </item>
    
  </channel>
</rss>
